<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Momiage blog]]></title>
  <link href="http://mominosin.github.io/atom.xml" rel="self"/>
  <link href="http://mominosin.github.io/"/>
  <updated>2014-08-26T11:52:52+09:00</updated>
  <id>http://mominosin.github.io/</id>
  <author>
    <name><![CDATA[mominosin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[シェルスクリプトメモ その１〜]]></title>
    <link href="http://mominosin.github.io/blog/2014/08/26/sierusukuriputomemo-sofalse1~/"/>
    <updated>2014-08-26T01:50:13+09:00</updated>
    <id>http://mominosin.github.io/blog/2014/08/26/sierusukuriputomemo-sofalse1~</id>
    <content type="html"><![CDATA[<h1>シェルスクリプトメモ その１</h1>

<p>仕事とかでシェルスクリプト書いててよく利用する事を備忘録的にまとめてみようかとおもいます。</p>

<h2>コマンドの内容を変数に格納</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># 試しにディレクトリ内のファイルの数を数えてみる</span>
</span><span class='line'><span class="nv">$ </span>ls -1 <span class="p">|</span> wc -l
</span><span class='line'>13
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="nv">$ filecount1</span><span class="o">=</span><span class="k">$(</span>ls -1 <span class="p">|</span> wc -l<span class="k">)</span>
</span><span class='line'><span class="nv">$ filecount2</span><span class="o">=</span><span class="sb">`</span><span class="o">(</span>ls -1 <span class="p">|</span> wc -l<span class="o">)</span><span class="sb">`</span>
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="nv">$filecount1</span>
</span><span class='line'>13
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="nv">$filecount2</span>
</span><span class='line'>13
</span></code></pre></td></tr></table></div></figure>


<p>変数に格納したいコマンドを<code>$( )</code>又は<code>` `</code>で囲んで変数に渡してやると実行結果が変数に格納される。</p>

<!--more-->


<h2>コマンドの内容を配列に格納</h2>

<p><code>ls</code>や<code>find</code>の内容を個別の変数、配列として格納したい場合</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>ls
</span><span class='line'>file1 file2 file3
</span><span class='line'><span class="c"># 普通に変数に格納する</span>
</span><span class='line'><span class="nv">$ files</span><span class="o">=</span><span class="k">$(</span>ls<span class="k">)</span>
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="nv">$files</span>
</span><span class='line'>file1 file2 file3
</span><span class='line'><span class="c"># 1つの文字列として格納されている</span>
</span><span class='line'><span class="c"># 配列に格納</span>
</span><span class='line'><span class="nv">$ files</span><span class="o">=(</span><span class="k">$(</span>ls<span class="k">)</span><span class="o">)</span>
</span><span class='line'><span class="nv">$ </span><span class="nb">echo </span>files
</span><span class='line'>file1
</span><span class='line'><span class="c"># 配列の場所を指定して参照する場合はxに場所を入力 ${files[x]}</span>
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="k">${</span><span class="nv">files</span><span class="p">[2]</span><span class="k">}</span>
</span><span class='line'>file3
</span><span class='line'><span class="c"># すべて参照(forでループ)</span>
</span><span class='line'><span class="nv">$ </span><span class="k">for</span> file in <span class="k">${</span><span class="nv">files</span><span class="p">[*]</span><span class="k">}</span> <span class="p">;</span><span class="k">do</span>
</span><span class='line'>&gt;   <span class="nb">echo</span> <span class="nv">$file</span>
</span><span class='line'>&gt; <span class="k">done</span>
</span><span class='line'>file1
</span><span class='line'>file2
</span><span class='line'>file3
</span></code></pre></td></tr></table></div></figure>


<h2>変数の中の文字列をマッチしたところを除外して取り出し</h2>

<p>変数を展開するときにパターンマッチさせる</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># ファイルのパスを格納</span>
</span><span class='line'><span class="nv">$ filepath</span><span class="o">=</span><span class="k">$(</span>ls /tmp/test/file1<span class="k">)</span>
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="k">${</span><span class="nv">filepath</span><span class="k">}</span>
</span><span class='line'>/tmp/test/file1
</span><span class='line'><span class="c"># 前方からマッチした所を除外</span>
</span><span class='line'><span class="c"># 最短一致</span>
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="k">${</span><span class="nv">filepath</span><span class="p">#*/</span><span class="k">}</span>
</span><span class='line'>tmp/test/file1
</span><span class='line'><span class="c"># 最長一致</span>
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="k">${</span><span class="nv">filepath</span><span class="p">##*/</span><span class="k">}</span>
</span><span class='line'>file1
</span><span class='line'>
</span><span class='line'><span class="c"># 後方からマッチした所を除外</span>
</span><span class='line'><span class="c"># 最短一致（後方から)</span>
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="k">${</span><span class="nv">filepath</span><span class="p">%/*</span><span class="k">}</span>
</span><span class='line'>/tmp/test
</span><span class='line'><span class="c"># 最長一致（後方から）※今回は出力なし</span>
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="k">${</span><span class="nv">filepath</span><span class="p">%%/*</span><span class="k">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>とりあえず1回めの記事なのでこれくらいでおわります。</p>

<p>なお、内容はちゃんと調べて記載してるわけではないので僕の理解等に間違い等ありましたらご指摘いただけると幸いです。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The problem with Pingdom]]></title>
    <link href="http://mominosin.github.io/blog/2012/07/22/the-problem-with-pingdom/"/>
    <updated>2012-07-22T19:13:00+09:00</updated>
    <id>http://mominosin.github.io/blog/2012/07/22/the-problem-with-pingdom</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>Time to be Awesome - awesome.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Awesome!&quot;</span> <span class="k">unless</span> <span class="n">lame</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="http://www.pingdom.com%20Pingdom">The problem with pingdom.</a></p>

<p>My money&rsquo;s in that office, right? If she start giving me some bullshit about it ain&rsquo;t there, and we got to go someplace else and get it, I&rsquo;m gonna shoot you in the head then and there. Then I&rsquo;m gonna shoot that bitch in the kneecaps, find out where my goddamn money is. She gonna tell me too. Hey, look at me when I&rsquo;m talking to you, motherfucker. You listen: we go in there, and that nigga Winston or anybody else is in there, you the first motherfucker to get shot. You understand?</p>

<blockquote><p>Blockquote is what goes
inside this block here
would you believe that
bullshit?</p></blockquote>

<p>Well, the way they make shows is, they make one show. That show&rsquo;s called a pilot. Then they show that show to the people who make shows, and on the strength of that one show they decide if they&rsquo;re going to make more shows. Some pilots get picked and become television programs. Some don&rsquo;t, become nothing. She starred in one of the ones that became nothing.</p>

<p>The path of the righteous man is beset on all sides by the iniquities of the selfish and the tyranny of evil men. Blessed is he who, in the name of charity and good will, shepherds the weak through the valley of darkness, for he is truly his brother&rsquo;s keeper and the finder of lost children. And I will strike down upon thee with great vengeance and furious anger those who would attempt to poison and destroy My brothers. And you will know My name is the Lord when I lay My vengeance upon thee.</p>

<p>Your bones don&rsquo;t break, mine do. That&rsquo;s clear. Your cells react to bacteria and viruses differently than mine. You don&rsquo;t get sick, I do. That&rsquo;s also clear. But for some reason, you and I react the exact same way to water. We swallow it too fast, we choke. We get some in our lungs, we drown. However unreal it may seem, we are connected, you and I. We&rsquo;re on the same curve, just on opposite ends.</p>

<p>Do you see any Teletubbies in here? Do you see a slender plastic tag clipped to my shirt with my name printed on it? Do you see a little Asian child with a blank expression on his face sitting outside on a mechanical helicopter that shakes when you put quarters in it? No? Well, that&rsquo;s what you see at a toy store. And you must think you&rsquo;re in a toy store, because you&rsquo;re here shopping for an infant named Jeb.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Intro]]></title>
    <link href="http://mominosin.github.io/blog/2012/07/22/intro/"/>
    <updated>2012-07-22T08:23:00+09:00</updated>
    <id>http://mominosin.github.io/blog/2012/07/22/intro</id>
    <content type="html"><![CDATA[<p>Testing!</p>

<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sollicitudin, massa eu vestibulum laoreet, nibh ante vulputate lorem, ac lobortis ante tellus eu mi. Duis sem nisi, luctus at feugiat eget, fringilla ut tellus. Nam a molestie justo. Sed pulvinar est vitae tellus semper tincidunt. Fusce euismod luctus lacus nec placerat. Mauris rutrum scelerisque nulla ut tempor. Nunc porttitor posuere mi, aliquet vehicula lorem feugiat in. Ut ut fermentum risus. Aliquam tincidunt ultricies ante sit amet bibendum. Cras nec sapien odio. Duis posuere congue sem, at congue massa faucibus at.</p>

<p>Integer ut sapien eget nisl auctor faucibus ut fermentum arcu. Nunc rutrum urna non risus congue et tristique felis eleifend. Maecenas blandit est eu mauris aliquam aliquet. Quisque porttitor enim eget risus blandit in mollis orci eleifend. Nam malesuada nulla sed lacus elementum placerat accumsan arcu rhoncus. Phasellus feugiat cursus turpis nec facilisis. Duis eget metus arcu, eget commodo velit. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Integer cursus vulputate enim, vel gravida velit faucibus et. Ut a urna vitae tellus cursus rhoncus. Maecenas at odio eget quam cursus elementum. Aliquam vitae eros quis tellus laoreet accumsan sed id lorem. Suspendisse et rutrum leo. Integer scelerisque vestibulum adipiscing. In posuere, libero ac accumsan suscipit, nulla ligula gravida erat, ut tempor odio erat nec sem. Quisque justo ipsum, adipiscing volutpat varius vitae, blandit eget nisi.</p>

<p>Nullam adipiscing neque ac lacus commodo vitae imperdiet dui sollicitudin. Ut ac nunc augue. Nam at sem ut quam commodo aliquet vitae vitae dui. Vivamus scelerisque felis eget dolor cursus feugiat. Phasellus at dui sed lectus scelerisque pretium. Etiam nec massa ut justo vestibulum fringilla ac vitae urna. Morbi tortor erat, tempus sed consectetur at, elementum nec eros. Vivamus mattis arcu a sapien semper non lacinia eros pretium.</p>

<p>Proin ut hendrerit arcu. Maecenas ullamcorper tristique magna vel mattis. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Nullam tincidunt euismod viverra. In sit amet neque turpis. Suspendisse ac sapien mi, id blandit purus. Ut tortor turpis, rutrum ac tempor at, accumsan sit amet erat. Etiam ultricies eleifend dolor, eget tempus justo tristique vitae. In hac habitasse platea dictumst. Aliquam eu enim neque.</p>

<p>Morbi massa lorem, viverra non dictum at, malesuada vel nibh. Nam fermentum lobortis varius. Sed a nulla lacus, quis posuere risus. Nunc id urna libero, quis rutrum mi. In gravida felis urna. Praesent nec dolor ac urna tempor fermentum. Curabitur rutrum arcu et lorem volutpat viverra.</p>
]]></content>
  </entry>
  
</feed>
